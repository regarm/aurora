{"_id":{"$oid":"594790d88bf99854c605ad4e"},"solution":"#include \u003cbits/stdc++.h\u003e\nusing namespace std;\n\nint main (){\n\u0009int T; cin \u003e\u003e T;\n\u0009assert(T \u003e= 1 \u0026\u0026 T \u003c= 10);\n\u0009while(T--){\n\u0009\u0009int X,N,M; cin \u003e\u003e N \u003e\u003e M;\n\u0009\u0009assert(N \u003e= 1 \u0026\u0026 N \u003c= 30);\n\u0009\u0009assert(M \u003e= 1 \u0026\u0026 M \u003c= 30);\n\u0009\u0009assert(M \u003e= N);\n\u0009\u0009for(int i = 0;i \u003c N + M;++i){\n\u0009\u0009\u0009cin \u003e\u003e X; assert(X \u003e= 1 \u0026\u0026 X \u003c= 100);\n\u0009\u0009}\n\u0009\u0009assert(1 \u003c= (1 \u003c\u003c M) \u0026\u0026 (1 \u003c\u003c M) \u003c= INT_MAX);\n\u0009\u0009assert(1 \u003c= (1 \u003c\u003c N) \u0026\u0026 (1 \u003c\u003c N) \u003c= INT_MAX);\n\u0009\u0009assert(INT_MIN \u003c= ((1 \u003c\u003c M) - (1 \u003c\u003c N)) \u0026\u0026 ((1 \u003c\u003c M) - (1 \u003c\u003c N)) \u003c= INT_MAX);\n\u0009\u0009cout \u003c\u003c (1 \u003c\u003c M) - (1 \u003c\u003c N) \u003c\u003c \"\\n\";\n\u0009}\u0009\n\n\u0009return 0;\n}","problemCode":"TEST","contestCode":"PRACTICE","lang":"C++","handle":"CODOPEDIAC3"}
{"_id":{"$oid":"594790eb8bf99854c605ad4f"},"solution":"#include\u003cbits/stdc++.h\u003e\nusing namespace std;\n\nint main(){\n\u0009int t;\n\u0009scanf(\"%d\", \u0026t);\n\n\u0009/** --- assertion --- */\n\u0009assert(t \u003e= 1 \u0026\u0026 t \u003c= 10);\n\u0009/** --- assertion --- */\n\n\u0009while(t--){\n\u0009\u0009int N, M;\n\u0009\u0009scanf(\"%d%d\",\u0026N,\u0026M);\n\n\u0009\u0009/** --- assertion --- */\n\u0009\u0009assert(N \u003e= 1 \u0026\u0026 N \u003c= 30);\n\u0009\u0009assert(M \u003e= 1 \u0026\u0026 M \u003c= 30);\n\u0009\u0009assert(N \u003c= M);\n\u0009\u0009/** --- assertion --- */\n\n\u0009\u0009for(int i = 1;i \u003c= N;++i){\n\u0009\u0009\u0009int x;\n\u0009\u0009\u0009scanf(\"%d\", \u0026x);\n\n\u0009\u0009\u0009/** --- assertion --- */\n\u0009\u0009\u0009assert(x \u003e= 1 \u0026\u0026 x \u003c= 100);\n\u0009\u0009\u0009/** --- assertion --- */\n\n\u0009\u0009}\n\u0009\u0009for(int i = 1;i \u003c= M;++i){\n\u0009\u0009\u0009int x;\n\u0009\u0009\u0009scanf(\"%d\", \u0026x);\n\n\u0009\u0009\u0009/** --- assertion --- */\n\u0009\u0009\u0009assert(x \u003e= 1 \u0026\u0026 x \u003c= 100);\n\u0009\u0009\u0009/** --- assertion --- */\n\u0009\u0009\u0009\n\u0009\u0009}\n\n\u0009\u0009long long psetN = (1LL \u003c\u003c N);\n\u0009\u0009long long psetM = (1LL \u003c\u003c M);\n\n\u0009\u0009/*\n\u0009\u0009Or use can use these\n\u0009\u0009\u0009long long psetN = pow(2, N);\n\u0009\u0009\u0009long long psetM = pow(2, M);\n\u0009\u0009*/\n\n\u0009\u0009/** --- assertion --- */\n\u0009\u0009assert(1 \u003c= psetN \u0026\u0026 psetN \u003c= INT_MAX);\n\u0009\u0009assert(1 \u003c= psetM \u0026\u0026 psetM \u003c= INT_MAX);\n\u0009\u0009/** --- assertion --- */\n\n\n\u0009\u0009printf(\"%lld\\n\", psetM - psetN);\n\u0009}\n\n\n\u0009return 0;\n}","problemCode":"TEST","contestCode":"PRACTICE","lang":"C++","handle":"CODOPEDIAC3"}
